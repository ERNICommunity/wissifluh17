// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PMS.Backend.Data.Models;
using System;

namespace PMS.Backend.Data.Migrations
{
    [DbContext(typeof(PmsDataContext))]
    partial class PmsDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PMS.Backend.Data.Persistence.Entities.SensorNodeDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<double>("Humidity");

                    b.Property<double>("Pm10");

                    b.Property<double>("Pm2_5");

                    b.Property<Guid>("SensorNodeId");

                    b.Property<double>("Temperature");

                    b.HasKey("Id");

                    b.HasIndex("SensorNodeId");

                    b.ToTable("SensorNodeData");
                });

            modelBuilder.Entity("PMS.Backend.Data.Persistence.Entities.SensorNodeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SensorNode");
                });

            modelBuilder.Entity("PMS.Backend.Data.Persistence.Entities.SensorNodeDataEntity", b =>
                {
                    b.HasOne("PMS.Backend.Data.Persistence.Entities.SensorNodeEntity", "SensorNode")
                        .WithMany("SensorData")
                        .HasForeignKey("SensorNodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
